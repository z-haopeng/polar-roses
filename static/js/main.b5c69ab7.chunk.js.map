{"version":3,"sources":["Rose.js","index.js"],"names":["Rose","props","Sketch","p","setup","createCanvas","state","canvasSize","draw","background","push","translate","width","height","beginShape","stroke","noFill","num","denom","reduced","n","d","gcd","a","b","TWO_PI","r","cos","x","y","sin","vertex","endShape","CLOSE","pop","windowResized","setState","window","innerWidth","innerHeight","resizeCanvas","myRef","React","createRef","this","myP5","p5","current","ref","Component","App","Typography","variant","Box","fontStyle","fontSize","maxWidth","margin","align","gutterBottom","Slider","valueLabelDisplay","min","max","value","onChange","e","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,OAAS,SAACC,GACRA,EAAEC,MAAQ,WACRD,EAAEE,aAAa,EAAKC,MAAMC,WAAY,EAAKD,MAAMC,aAGnDJ,EAAEK,KAAO,WACPL,EAAEM,WAAW,IAGbN,EAAEO,OAEFP,EAAEQ,UAAUR,EAAES,MAAQ,EAAGT,EAAEU,OAAS,GAEpCV,EAAEW,aACFX,EAAEY,OAAO,KACTZ,EAAEa,SAOF,IADA,IAgCeC,EAAKC,EAhChBC,GAgCWF,EAhCW,EAAKhB,MAAMmB,GAgCjBF,EAhCoB,EAAKjB,MAAMoB,GAiCvD,SAASC,EAAIC,EAAGC,GACd,OAAOA,EAAIF,EAAIE,EAAGD,EAAIC,GAAKD,EAEdD,CAAIL,EAAKC,IAnCXK,EAAI,EAAGA,EAAIpB,EAAEsB,OAASN,EAASI,GAAKJ,EAAQ,IAAK,CACxD,IAAIO,EAAI,EAAKpB,MAAMC,WAAW,EAAIJ,EAAEwB,IAAI,EAAK1B,MAAMmB,EAAI,EAAKnB,MAAMoB,EAAIE,GAElEK,EAAIF,EAAIvB,EAAEwB,IAAIJ,GACdM,EAAIH,EAAIvB,EAAE2B,IAAIP,GAClBpB,EAAE4B,OAAOH,EAAGC,GAEd1B,EAAE6B,SAAS7B,EAAE8B,OAEb9B,EAAE+B,OAGJ/B,EAAEgC,cAAgB,WAChB,EAAKC,SAAS,CAAC7B,WAAY8B,OAAOC,WAAa,KAAOD,OAAOE,YAAc,IAAM,IAAM,MACvFpC,EAAEqC,aAAa,EAAKlC,MAAMC,WAAY,EAAKD,MAAMC,cA7CnD,EAAKkC,MAAQC,IAAMC,YAEnB,EAAKrC,MAAQ,CACXC,WAAY8B,OAAOC,WAAa,KAAOD,OAAOE,YAAc,IAAM,IAAM,KANzD,E,gEAqDjBK,KAAKC,KAAO,IAAIC,IAAGF,KAAK1C,OAAQ0C,KAAKH,MAAMM,W,+BAI3C,OACE,yBAAKC,IAAKJ,KAAKH,Y,GA3DaC,IAAMO,W,ICWlCC,E,kDACJ,WAAYjD,GAAQ,IAAD,8BACjB,cAAMA,IACDK,MAAQ,CACXc,EAAG,EACHC,EAAG,GAJY,E,qDAQT,IAAD,OACP,OACE,6BACE,kBAAC8B,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACA,kBAAC,EAAD,CAAMhC,EAAGwB,KAAKtC,MAAMc,EAAGC,EAAGuB,KAAKtC,MAAMe,IACrC,kBAACgC,EAAA,EAAD,CAAKC,UAAU,SAASC,SAAS,eAAjC,oBACA,kBAACF,EAAA,EAAD,CAAKzC,MAAM,QAAQ4C,SAAS,OAAOC,OAAO,QACxC,kBAACN,EAAA,EAAD,CAAYO,MAAM,OAAOC,cAAY,GAArC,iBACA,kBAACC,EAAA,EAAD,CACEC,kBAAkB,OAClBC,IAAK,EACLC,IAAK,GACLC,MAAOpB,KAAKtC,MAAMc,EAClB6C,SAAU,SAACC,EAAGC,GAAJ,OAAY,EAAK/B,SAAS,CAAChB,EAAG+C,OAC1C,kBAAChB,EAAA,EAAD,CAAYO,MAAM,OAAOC,cAAY,GAArC,mBACA,kBAACC,EAAA,EAAD,CACEC,kBAAkB,OAClBC,IAAK,EACLC,IAAK,GACLC,MAAOpB,KAAKtC,MAAMe,EAClB4C,SAAU,SAACC,EAAGC,GAAJ,OAAY,EAAK/B,SAAS,CAACf,EAAG8C,a,GA7BlCzB,IAAMO,WAsCxBmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b5c69ab7.chunk.js","sourcesContent":["import React from 'react';\r\nimport p5 from 'p5';\r\n\r\nexport default class Rose extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Reference so that the draw method will change the screen\r\n    this.myRef = React.createRef();\r\n    // Resize the canvas based on device size\r\n    this.state = {\r\n      canvasSize: window.innerWidth < 500 || window.innerHeight < 500 ? 250 : 500\r\n    }\r\n  }\r\n\r\n  // p5.js implementation\r\n  // setup() is called once, draw() is called ~60 times per second\r\n  Sketch = (p) => {\r\n    p.setup = () => {\r\n      p.createCanvas(this.state.canvasSize, this.state.canvasSize);\r\n    }\r\n\r\n    p.draw = () => {\r\n      p.background(51);\r\n      // Stores the drawing state at this moment\r\n      // Not really necessary in this case, but useful for more complex drawings\r\n      p.push();\r\n      // Default starting point is top left corner, so move to center of canvas\r\n      p.translate(p.width / 2, p.height / 2);\r\n      // Create a visibly smooth curve that connects all points\r\n      p.beginShape();\r\n      p.stroke(255);\r\n      p.noFill();\r\n      // The minimun number of full circles (2*pi radians) needed to trace out\r\n      // A rose of the form r = cos(n*theta/d) is the denominator of n/d in simplest form\r\n      // Ex. if n = 5 and d = 10, 5/10 = 1/2, so the loop must go from 0 to 2*2*pi\r\n      // However, this value, stored in reduced, can range from 1 to 25, and no curve needs 25x as many points\r\n      // So the increment is made proportional to reduced, and every rose has the same number of points\r\n      let reduced = reduceDenom(this.props.n, this.props.d);\r\n      for (let a = 0; a < p.TWO_PI * reduced; a += reduced/500) {\r\n        let r = this.state.canvasSize/2 * p.cos(this.props.n / this.props.d * a);\r\n        // Converting from polar coordinates to cartesian\r\n        let x = r * p.cos(a);\r\n        let y = r * p.sin(a);\r\n        p.vertex(x, y);\r\n      }\r\n      p.endShape(p.CLOSE);\r\n      // Return to the state stored by the last call to push()\r\n      p.pop();\r\n    }\r\n\r\n    p.windowResized = () => {\r\n      this.setState({canvasSize: window.innerWidth < 500 || window.innerHeight < 500 ? 250 : 500});\r\n      p.resizeCanvas(this.state.canvasSize, this.state.canvasSize);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div ref={this.myRef} />\r\n    );\r\n  }\r\n}\r\n\r\n// Recursive GCD function that apparently everyone knows about\r\n// Takes advantage of true also meaning \"not 0\" for numbers\r\nfunction reduceDenom(num, denom) {\r\n  function gcd(a, b) {\r\n    return b ? gcd(b, a % b) : a;\r\n  }\r\n  return denom / gcd(num, denom);\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'fontsource-roboto/latin-ext-300.css';\nimport 'fontsource-roboto/latin-ext-400.css';\nimport 'fontsource-roboto/latin-ext-500.css';\nimport 'fontsource-roboto/latin-ext-700.css';\n\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport Box from '@material-ui/core/Box';\n\nimport Rose from './Rose.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      n: 5,\n      d: 3\n    }\n  }\n\n  render() {\n    return(\n      <div>\n        <Typography variant='h3'>Polar Roses</Typography>\n        <Rose n={this.state.n} d={this.state.d}></Rose>\n        <Box fontStyle='italic' fontSize='h6.fontSize'>r=cos(n&theta;/d)</Box>\n        <Box width='500px' maxWidth='80vw' margin='auto'>\n          <Typography align='left' gutterBottom>Numerator (n)</Typography>\n          <Slider\n            valueLabelDisplay='auto'\n            min={1}\n            max={25} \n            value={this.state.n}\n            onChange={(e, val) => this.setState({n: val})} />\n          <Typography align='left' gutterBottom>Denominator (d)</Typography>\n          <Slider \n            valueLabelDisplay='auto'\n            min={1}\n            max={25}\n            value={this.state.d}\n            onChange={(e, val) => this.setState({d: val})} />\n        </Box>\n        \n      </div> \n    )\n  }\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}